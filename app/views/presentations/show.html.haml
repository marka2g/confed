- content_for :javascript_includes do
  = javascript_include_tag 'presentations/show'
  = javascript_include_tag 'disqus'
  :javascript
    var disqus_identifier="#{event_presentation_path(@presentation.event, @presentation)}"
    var disqus_url="#{event_presentation_url(@presentation.event, @presentation)}"

- content_for :atom_feed do 
  - @presentation.speakers.each do |speaker|
    = auto_discovery_link_tag(:atom, speaker_url(speaker, :format => :atom))
  - @presentation.tag_list.each do |tag|
    = auto_discovery_link_tag(:atom, tagged_url(tag, :format => :atom))
  = auto_discovery_link_tag(:atom, event_url(@presentation.event, :format => :atom))

- meta_content_for(:title) do
  #{@presentation.title} - #{@presentation.event.name}

- meta_content_for(:description) { @presentation.description }

= meta_content_for(:keywords) { @presentation.tag_list.to_s }

%article.presentation
  %h2= @presentation.title
  - if @presentation.videos
    - @presentation.videos.each do |video|
      = div_for(video) do
        = raw video.content
  #disqus_thread

%aside
  %dl
    %dt= @presentation.speakers.size > 1 ? 'Speakers' : 'Speaker'
    - @presentation.speakers.each do |speaker|
      %dd= link_to speaker.name, speaker_path(speaker)
    %dt Event
    %dd #{link_to @presentation.event.name, @presentation.event}
    %dt Description
    %dd.description
      = raw @presentation.rendered_description
      - if @presentation.tags.present?
        .tags
          - @presentation.tags.each do |tag|
            = link_to_tag(tag)

    %dd
      = tweet_button :text => tweet_text_for(@presentation),
                     :url => shorten_url_for(request.url, @presentation)
    %dd
      = button_to 'Watch Later', save_presentation_path(:user_id => current_user.id, :id => @presentation.id) if user_signed_in?
